% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_recipes.R
\name{get_recipes}
\alias{get_recipes}
\title{Get Recipes}
\usage{
get_recipes(
  page = NULL,
  format = NULL,
  licenseType = NULL,
  pageSize = NULL,
  q = NULL,
  sort = NULL,
  debug = FALSE,
  consumer_key = Sys.getenv("CONSUMER_KEY"),
  consumer_secret = Sys.getenv("CONSUMER_ID")
)
}
\arguments{
\item{page}{A generated token that indicates the view of the objects to be returned.    Optional    v38}

\item{format}{Returns a collection filtered by the format of the current
recipe definition. Valid values are: 'R2' (Data Prep Classic), 'R3' (Data Prep).    Optional    v48}

\item{licenseType}{Filters the collection by the Analytics license type.
Valid values areEinsteinAnalytics (CRM Analytics)Sonic (Salesforce Data Pipeline)    Optional    52}

\item{pageSize}{Number of items to be returned in a single page. Minimum is
1, maximum is 200, and default is 25.    Optional    38}

\item{q}{Search terms. Individual terms are separated by spaces. A wildcard is
automatically appended to the last token in the query string. If the userâ€™s
search query contains quotation marks or wildcards, those symbols are automatically
removed from the query string in the URI along with any other special characters.    Optional    38}

\item{sort}{The type of sort order to be applied to the returned collection.
Valid values are: 'AppCreatedBy', 'CreatedDate', 'LastModified', 'LastModifiedBy',
'Mru' (Most Recently Used, last viewed date), 'Name', 'Type'.    Optional    v38}

\item{debug}{Outputs the call in the Console for debugging purposes}

\item{consumer_key}{Consumer key given by CRMA App}

\item{consumer_secret}{Consumer secret given by CRMA App}
}
\value{
Dataframe of datasets and metadata
}
\description{
This function pulls a list of recipes from TCRM
}
